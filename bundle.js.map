{"version":3,"sources":["webpack:///webpack/bootstrap 4a06cc5b7d532e7bd82e","webpack:///./snake/snake_main.js","webpack:///./snake/snake.js","webpack:///./snake/coord.js","webpack:///./snake/snake_view.js","webpack:///./snake/board.js","webpack:///./snake/apple.js","webpack:///./lib/main.js","webpack:///./lib/dom_node_collection.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;;;;;;;ACVD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC/FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,YAAW,UAAU;;AAErB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,oBAAoB;AACvC;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA,wBAAuB,aAAa;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;ACtBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAQ;AACR,MAAK;;AAEL;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA,iCAAgC;AAChC;AACA;AACA,uDAAsD;AACtD;AACA;AACA,eAAc;AACd,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;;AAEA;;;;;;;ACrEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA;AACA;;AAEA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4a06cc5b7d532e7bd82e","const $e = require('../lib/main.js');\r\nconst View = require('./snake_view');\r\n\r\n$e(()=>{\r\n    const rootEl = $e('.grid');\r\n      $e(\".restart\").on(\"click\", () => {\r\n       $e(\".score\").html(0);\r\n       new View(rootEl);\r\n    });\r\n  new View(rootEl);\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/snake_main.js\n// module id = 0\n// module chunks = 0","const Coord = require('./coord');\r\nconst $e = require('../lib/main.js');\r\n\r\nclass Snake {\r\n  constructor(board) {\r\n    this.dir = \"N\";\r\n    this.turning = false;\r\n    this.board = board;\r\n    this.score = 0;\r\n    const center = new Coord(Math.floor(board.dim/2), Math.floor(board.dim/2));\r\n    this.segments = [center];\r\n    this.growTurns = 0;\r\n  }\r\n\r\n  eatApple() {\r\n    if (this.head().equals(this.board.apple.position)) {\r\n      this.growTurns += 3;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isOccupying(arr) {\r\n    let result = false;\r\n    this.segments.forEach((segment) => {\r\n      if (segment.x === arr[0] && segment.y === arr[1]) {\r\n        result = true;\r\n        return result;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  head() {\r\n    return this.segments.slice(-1)[0];\r\n  }\r\n\r\n  isValid() {\r\n    const head = this.head();\r\n\r\n    if (!this.board.validPosition(this.head())) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < this.segments.length - 1; i++) {\r\n      if (this.segments[i].equals(head)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  move() {\r\n    this.segments.push(this.head().plus(Snake.DIFFS[this.dir]));\r\n\r\n    this.turning = false;\r\n\r\n    if (this.eatApple()) {\r\n      this.score += 5;\r\n      this.board.apple.replace();\r\n    }\r\n\r\n    if (this.growTurns > 0) {\r\n      this.growTurns -= 1;\r\n    } else {\r\n      this.segments.shift();\r\n    }\r\n\r\n    if (!this.isValid()) {\r\n      this.segments = [];\r\n    }\r\n  }\r\n\r\n  turn(dir) {\r\n    if (Snake.DIFFS[this.dir].isOpposite(Snake.DIFFS[dir]) || this.turning) {\r\n      return;\r\n    } else {\r\n      this.turning = true;\r\n      this.dir = dir;\r\n    }\r\n  }\r\n  }\r\n\r\n  Snake.DIFFS = {\r\n    \"N\": new Coord(-1, 0),\r\n    \"E\": new Coord(0, 1),\r\n    \"S\": new Coord(1, 0),\r\n    \"W\": new Coord(0, -1)\r\n};\r\n\r\nSnake.SYMBOL = \"S\";\r\nSnake.GROW_TURNS = 3;\r\n\r\nmodule.exports = Snake;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/snake.js\n// module id = 1\n// module chunks = 0","class Coord {\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  equals(coord2) {\r\n    return (this.x === coord2.x && this.y === coord2.y);\r\n  }\r\n\r\n  plus(coord2) {\r\n    return new Coord(this.x + coord2.x, this.y + coord2.y);\r\n  }\r\n\r\n  isOpposite(coord2) {\r\n    return (this.x === -coord2.x) && (this.y === -coord2.y);\r\n  }\r\n}\r\n\r\nmodule.exports = Coord;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/coord.js\n// module id = 2\n// module chunks = 0","const Board = require('./board.js');\r\nconst $e = require('../lib/main.js');\r\n\r\nclass View {\r\n  constructor($el){\r\n    this.$el = $el;\r\n    this.board = new Board(20);\r\n    this.setupGrid();\r\n    this.intervalId = window.setInterval(\r\n      this.step.bind(this),\r\n      View.STEP_MILLIS\r\n    );\r\n\r\n    $e(window).on(\"keydown\", this.handleKeyEvent.bind(this));\r\n  }\r\n\r\n  render() {\r\n    this.updateClasses(this.board.snake.segments, \"snake\");\r\n    this.updateClasses([this.board.apple.position], \"apple\");\r\n    $e('.score').html(this.board.snake.score);\r\n  }\r\n\r\n\r\n\r\n  updateClasses(coords, className) {\r\n    $e(`.${className}`).removeClass(className);\r\n\r\n    coords.forEach( coord => {\r\n      const flatCoord = (coord.x * 20) + coord.y;\r\n      if (this.$li) {\r\n        this.$li.eq(flatCoord).addClass(className);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleKeyEvent(event) {\r\n    if (View.KEYS[event.keyCode]) {\r\n      this.board.snake.turn(View.KEYS[event.keyCode]);\r\n    }\r\n  }\r\n\r\n  setupGrid() {\r\n    let html = \"\";\r\n\r\n    for (let i = 0; i < this.board.dim; i++){\r\n      html += \"<ul>\";\r\n      for (let j = 0; j < this.board.dim; j++){\r\n        html += \"<li></li>\";\r\n      }\r\n      html += \"</ul>\";\r\n    }\r\n\r\n    this.$el.html(html);\r\n    this.$li = $e('li');\r\n  }\r\n\r\n  step() {\r\n    if (this.board.snake.segments.length > 0) {\r\n      this.board.snake.move();\r\n      this.render();\r\n    }else {\r\n      $e('.apple').removeClass(\"apple\");\r\n      $e('.score').append(\"<p>GAME OVER</p>\");\r\n      window.clearInterval(this.intervalId);\r\n    }\r\n  }\r\n}\r\n\r\nView.KEYS = {\r\n  38: \"N\",\r\n  39: \"E\",\r\n  40: \"S\",\r\n  37: \"W\"\r\n};\r\n\r\nView.STEP_MILLIS = 100;\r\n\r\nmodule.exports = View;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/snake_view.js\n// module id = 3\n// module chunks = 0","const Snake = require('./snake');\r\nconst Apple = require('./apple');\r\n\r\nclass Board {\r\n  constructor(dim) {\r\n    this.dim = dim;\r\n    this.snake = new Snake(this);\r\n    this.apple = new Apple(this);\r\n  }\r\n\r\n  static makeGrid(dim) {\r\n    const grid = [];\r\n    for (let i = 0; i < dim; i++) {\r\n      const row = [];\r\n      for (let j = 0; j < dim; j++) {\r\n        row.push(Board.BLANK_SYMBOL);\r\n      }\r\n      grid.push(row);\r\n    }\r\n    return grid;\r\n  }\r\n\r\n  render() {\r\n    const grid = Board.makeGrid(this.dim);\r\n    this.snake.segments.forEach((segment) => {\r\n      grid[segment.x][segment.y] = Snake.SYMBOL;\r\n    });\r\n    grid[this.apple.position.x][this.apple.position.y] = Apple.SYMBOL;\r\n\r\n    grid.map((row) => {row.join(\"\")}).join(\"\\n\");\r\n  }\r\n\r\n  validPosition(coord){\r\n    return (coord.x >= 0) && (coord.x < this.dim) && (coord.y >= 0) && (coord.y < this.dim);\r\n  }\r\n}\r\nBoard.BLANK_SYMBOL = '.';\r\nmodule.exports = Board;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/board.js\n// module id = 4\n// module chunks = 0","const Coord = require(\"./coord\");\r\n\r\nclass Apple {\r\n  constructor(board) {\r\n    this.board = board;\r\n    this.replace();\r\n  }\r\n\r\n  replace() {\r\n    let x = Math.floor(Math.random() * this.board.dim);\r\n    let y = Math.floor(Math.random() * this.board.dim);\r\n\r\n    while (this.board.snake.isOccupying([x, y])) {\r\n      x = Math.floor(Math.random() * this.board.dim);\r\n      y = Math.floor(Math.random() * this.board.dim);\r\n    }\r\n\r\n    this.position = new Coord(x, y);\r\n  }\r\n\r\n}\r\n\r\nmodule.exports = Apple;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/apple.js\n// module id = 5\n// module chunks = 0","  const DOMNodeCollection = require(\"./dom_node_collection\");\r\n\r\n    const functionQueue = [];\r\n    let  docReady = false;\r\n\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n       docReady = true;\r\n       functionQueue.forEach((fnc) => {\r\n        fnc();\r\n       });\r\n    });\r\n\r\n    const $e = (arg) => {\r\n      if (typeof arg === \"function\"){\r\n         if (docReady) {\r\n           arg();\r\n         } else {\r\n           functionQueue.push(arg);\r\n         }\r\n      }else if (typeof arg === HTMLElement || arg === window){\r\n        return new DOMNodeCollection([arg]);\r\n      }else if (typeof arg === 'string') {\r\n        let nodeList = document.querySelectorAll(arg)\r\n        let na = Array.from(nodeList);\r\n        return new DOMNodeCollection(na)\r\n      }\r\n  };\r\n\r\n  $e.extend = function(obj1, ...mobj) {\r\n     mobj.forEach((object) => {\r\n      for (let key in object) {\r\n        obj1[key] = object[key];\r\n      }\r\n    });\r\n  return obj1;\r\n };\r\n\r\n $e.ajax = function(options = {}) {\r\n  return new Promise((resolve, reject) => {\r\n    const defaults = {\r\n      contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\r\n      method: \"GET\",\r\n      url: \"document.URL\",\r\n      data: {},\r\n      success: () => {},\r\n      error: () => {}\r\n   };\r\n    const xhr = new XMLHttpRequest();\r\n    options = $e.extend(defaults, options);\r\n    options.type = options.type.toUpperCase();\r\n    xhr.open(options.type, options.url, true);\r\n    xhr.onload = function () {\r\n      const response = JSON.parse(xhr.response);\r\n\r\n      if (xhr.status === 200) {\r\n        options.success(response);\r\n        resolve(response);\r\n      } else {\r\n        options.error(response);\r\n        reject(response);\r\n      }\r\n    };\r\n\r\n    xhr.send(options.data);\r\n  });\r\n}\r\n\r\n  window.$e = $e;\r\n\r\n  module.exports = $e;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 6\n// module chunks = 0","class DOMNodeCollection {\r\n\r\n  constructor(nodes){\r\n    this.nodes = nodes;\r\n  }\r\n\r\n  each(cb){\r\n    this.nodes.forEach(cb);\r\n  }\r\n\r\n\n  html(html) {\r\n    if (typeof html === \"string\" || typeof html === \"number\" ) {\r\n      this.each(node => node.innerHTML = html);\r\n    } else {\r\n      if (this.nodes.length > 0) {\r\n        return this.nodes[0].innerHTML;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  empty(){\r\n    this.html('');\r\n  }\r\n\r\n  append(children){\r\n    if (this.nodes.length === 0)return;\r\n\r\n    if (typeof children === \"string\") {\r\n      this.each(node => node.innerHTML += children);\r\n    }else if (children instanceof DOMNodeCollection){\r\n      this.each(node => {\r\n        children.each(childNode =>{\r\n          node.appendChild(childNode.cloneNode(true))\r\n        });\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  attr(key,val){\r\n    if (typeof val === \"string\") {\r\n      this.each(node => node.setAttribute(key,val) );\r\n    }else{\r\n      return this.nodes[0].getAttribute(key);\r\n    }\r\n  }\r\n\r\n  addClass(newClass){\r\n    this.each(node => node.classList.add(newClass));\r\n  }\r\n\r\n  removeClass(oldClass){\r\n    this.each(node => node.classList.remove(oldClass));\r\n  }\r\n\r\n  remove(){\r\n    this.each(node => node.parentNode.removeChild(node));\r\n  }\r\n\r\n  find(selector){\r\n    let foundNodes = [];\r\n    this.each(node => {\r\n      const nodeList = node.querySelectorAll(selector);\r\n      foundNodes = foundNodes.concat(Array.from(nodeList));\r\n    });\r\n    return new DOMNodeCollection(foundNodes);\r\n  }\r\n\r\n  parent() {\r\n     const parents = [];\r\n\r\n     this.each((node) => {\r\n       parents.push(node.parentNode);\r\n     });\r\n\r\n     return new DOMNodeCollection(parents);\r\n   }\r\n\r\n  children(){\r\n    let childNodes = [];\r\n    this.each(node => {\r\n      const childNodeList = node.children;\r\n      childNodes = childNodes.concat(Array.from(childNodeList));\r\n    });\r\n    return new DOMNodeCollection(childNodes);\r\n  }\r\n\r\n  on(evt, cb) {\r\n    this.each((node) => {\r\n      node.addEventListener(evt, cb);\r\n      node.eventCallback = cb;\r\n    });\r\n  }\r\n\r\n  off(evt) {\r\n     this.each((node) => {\r\n       const cb = node.eventCallback;\r\n       node.removeEventListener(evt, cb);\r\n     });\r\n   }\r\n\r\n   eq(idx) {\r\n      return new DOMNodeCollection([this.nodes[idx]]);\r\n   }\r\n\r\n}\r\n\r\nmodule.exports = DOMNodeCollection;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/dom_node_collection.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}